"use strict";(self.webpackChunkcheckpoint_doc=self.webpackChunkcheckpoint_doc||[]).push([[8882],{6145:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"quivio/components/customLoader","title":"CustomLoader","description":"The CustomLoader component is a full-screen loading indicator designed for React Native applications. It displays a centered activity spinner that overlays other content, making it ideal for showing loading states during async operations.","source":"@site/docs/quivio/components/customLoader.md","sourceDirName":"quivio/components","slug":"/quivio/components/customLoader","permalink":"/checkpoint_doc/quivio/components/customLoader","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quivio/components/customLoader.md","tags":[],"version":"current","frontMatter":{},"sidebar":"quivioSidebar","previous":{"title":"CustomerListContentCard","permalink":"/checkpoint_doc/quivio/components/customerListContentCard"},"next":{"title":"CustomVideo","permalink":"/checkpoint_doc/quivio/components/customVideo"}}');var o=t(4848),i=t(8453);const r={},c="CustomLoader",d={},a=[{value:"Usage",id:"usage",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Props",id:"props",level:2},{value:"Features",id:"features",level:2},{value:"Example: Custom TestID",id:"example-custom-testid",level:2},{value:"Implementation Details",id:"implementation-details",level:2},{value:"Notes",id:"notes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"customloader",children:"CustomLoader"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"CustomLoader"})," component is a full-screen loading indicator designed for React Native applications. It displays a centered activity spinner that overlays other content, making it ideal for showing loading states during async operations."]}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'import React from "react";\nimport CustomLoader from "./CustomLoader";\n\nconst MyComponent = () => {\n  return (\n    <>\n      {/* Your other components */}\n      <CustomLoader testID="my-loader" />\n    </>\n  );\n};\n\nexport default MyComponent;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Prop Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"testID"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"string"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"'custom-loader'"})}),(0,o.jsx)(n.td,{children:"Test identifier for the loader (useful for testing)."})]})})]}),"\n",(0,o.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Centered Positioning:"})," Automatically centers in the middle of the screen using React Native's Dimensions API."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Overlay Display:"})," Uses absolute positioning and z-index to display above other content."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Customizable Testing:"})," Includes ",(0,o.jsx)(n.code,{children:"testID"})," prop for testing purposes."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Predefined Styling:"})," Uses a consistent blue color (",(0,o.jsx)(n.code,{children:"colors.blue23679D"}),") and large size indicator."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"example-custom-testid",children:"Example: Custom TestID"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'<CustomLoader testID="loading-state-indicator" />\n'})}),"\n",(0,o.jsx)(n.h2,{id:"implementation-details",children:"Implementation Details"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:'interface CustomLoaderProps {\n  testID?: string;\n}\n\nconst CustomLoader: React.FC<CustomLoaderProps> = ({\n  testID = "custom-loader",\n}) => {\n  return (\n    <ActivityIndicator\n      size="large"\n      testID={testID}\n      color={colors.blue23679D}\n      style={{\n        position: "absolute",\n        zIndex: 2,\n        top: Dimensions.get("screen").height / 2,\n        alignSelf: "center",\n      }}\n    />\n  );\n};\n'})}),"\n",(0,o.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The component requires ",(0,o.jsx)(n.code,{children:"@quivio/utils"})," for color definitions."]}),"\n",(0,o.jsxs)(n.li,{children:["Uses React Native's built-in ",(0,o.jsx)(n.code,{children:"ActivityIndicator"})," component."]}),"\n",(0,o.jsx)(n.li,{children:"Position is calculated dynamically based on screen dimensions."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const o={},i=s.createContext(o);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);