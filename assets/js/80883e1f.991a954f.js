"use strict";(self.webpackChunkcheckpoint_doc=self.webpackChunkcheckpoint_doc||[]).push([[9922],{4512:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>d,toc:()=>c});const d=JSON.parse('{"id":"quivio/components/modals/customModalWrapper","title":"CustomModalWrapper","description":"The CustomModalWrapper is a reusable modal component built on top of react-native-modal, providing enhanced customization options and consistent styling for modal dialogs.","source":"@site/docs/quivio/components/modals/customModalWrapper.md","sourceDirName":"quivio/components/modals","slug":"/quivio/components/modals/customModalWrapper","permalink":"/quivio/components/modals/customModalWrapper","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quivio/components/modals/customModalWrapper.md","tags":[],"version":"current","frontMatter":{},"sidebar":"quivioSidebar","previous":{"title":"ListContentCard","permalink":"/quivio/components/listContentCard"},"next":{"title":"BottomBaseSheet","permalink":"/quivio/components/modals/bottomSheet"}}');var o=s(4848),i=s(8453);const t={},r="CustomModalWrapper",l={},c=[{value:"Usage",id:"usage",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Props",id:"props",level:2},{value:"Features",id:"features",level:2},{value:"Default Behavior",id:"default-behavior",level:2},{value:"Example: Custom Styling",id:"example-custom-styling",level:2},{value:"Dependencies",id:"dependencies",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"custommodalwrapper",children:"CustomModalWrapper"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"CustomModalWrapper"})," is a reusable modal component built on top of ",(0,o.jsx)(n.code,{children:"react-native-modal"}),", providing enhanced customization options and consistent styling for modal dialogs."]}),"\n",(0,o.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,o.jsx)(n.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'import React from "react";\nimport CustomModalWrapper from "./CustomModalWrapper";\n\nconst MyComponent = () => {\n  const [isModalVisible, setModalVisible] = React.useState(false);\n\n  const toggleModal = () => {\n    setModalVisible(!isModalVisible);\n  };\n\n  return (\n    <>\n      <CustomModalWrapper\n        isVisible={isModalVisible}\n        onBackPress={toggleModal}\n        onBackPressDrop={toggleModal}\n      >\n        <Text>This is a custom modal!</Text>\n      </CustomModalWrapper>\n      <Button title="Toggle Modal" onPress={toggleModal} />\n    </>\n  );\n};\n\nexport default MyComponent;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Prop Name"}),(0,o.jsx)(n.th,{children:"Type"}),(0,o.jsx)(n.th,{children:"Default"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"isVisible"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"boolean"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.strong,{children:"Required"})}),(0,o.jsx)(n.td,{children:"Controls the visibility of the modal."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"modalCustomStyle"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ViewStyle"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"undefined"})}),(0,o.jsx)(n.td,{children:"Custom styles applied to the modal container."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"onBackPress"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"() => void"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"undefined"})}),(0,o.jsx)(n.td,{children:"Callback for the back button press event."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"onBackPressDrop"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"() => void"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"undefined"})}),(0,o.jsx)(n.td,{children:"Callback for when the backdrop is pressed."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"onModalHide"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"() => void"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"undefined"})}),(0,o.jsx)(n.td,{children:"Callback triggered when the modal has finished hiding."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"onModalShow"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"() => void"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"undefined"})}),(0,o.jsx)(n.td,{children:"Callback triggered when the modal has finished showing."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"children"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ReactNode"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"undefined"})}),(0,o.jsx)(n.td,{children:"Content to render inside the modal."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"...rest"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"ModalProps"})}),(0,o.jsx)(n.td,{children:(0,o.jsx)(n.code,{children:"undefined"})}),(0,o.jsxs)(n.td,{children:["Additional props forwarded to ",(0,o.jsx)(n.code,{children:"react-native-modal"}),"."]})]})]})]}),"\n",(0,o.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Backdrop and Animation:"})," Includes a semi-transparent backdrop with animation support."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Customizable Styles:"})," Allows overriding of modal container styles using ",(0,o.jsx)(n.code,{children:"modalCustomStyle"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Event Handlers:"})," Supports event handlers for modal lifecycle events such as ",(0,o.jsx)(n.code,{children:"onModalHide"})," and ",(0,o.jsx)(n.code,{children:"onModalShow"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Accessibility:"})," Utilizes native drivers for smoother animations and better performance."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"default-behavior",children:"Default Behavior"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["The backdrop color is set to ",(0,o.jsx)(n.code,{children:"colors.greyModalBack"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Backdrop opacity is configured at ",(0,o.jsx)(n.code,{children:"0.6"}),"."]}),"\n",(0,o.jsx)(n.li,{children:"Animations are optimized by hiding modal content while animating."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"example-custom-styling",children:"Example: Custom Styling"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'<CustomModalWrapper\n  isVisible={true}\n  modalCustomStyle={{ borderRadius: 20, margin: 10 }}\n  onBackPress={() => console.log("Back button pressed")}\n  onBackPressDrop={() => console.log("Backdrop pressed")}\n>\n  <Text>Custom styled modal content!</Text>\n</CustomModalWrapper>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,o.jsxs)(n.p,{children:["This component relies on ",(0,o.jsx)(n.code,{children:"react-native-modal"})," for modal functionalities and ",(0,o.jsx)(n.code,{children:"colors"})," from the ",(0,o.jsx)(n.code,{children:"utils"})," directory for consistent styling."]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>r});var d=s(6540);const o={},i=d.createContext(o);function t(e){const n=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),d.createElement(i.Provider,{value:n},e.children)}}}]);