"use strict";(self.webpackChunkcheckpoint_doc=self.webpackChunkcheckpoint_doc||[]).push([[8280],{4875:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"quivio/components/bottomSheets/sheetWithRoles","title":"SheetWithRoles","description":"The SheetWithRoles component is a React Native component that presents a role selection interface with two options: Admin and Employee. It provides a clean, visual way for users to select their role in the application.","source":"@site/docs/quivio/components/bottomSheets/sheetWithRoles.md","sourceDirName":"quivio/components/bottomSheets","slug":"/quivio/components/bottomSheets/sheetWithRoles","permalink":"/checkpoint_doc/quivio/components/bottomSheets/sheetWithRoles","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quivio/components/bottomSheets/sheetWithRoles.md","tags":[],"version":"current","frontMatter":{},"sidebar":"quivioSidebar","previous":{"title":"SheetWithOneTimeFilters","permalink":"/checkpoint_doc/quivio/components/bottomSheets/sheetWithOneTimeFilters"},"next":{"title":"CollapsibleContainer","permalink":"/checkpoint_doc/quivio/components/collapsibleContainer"}}');var l=i(4848),t=i(8453);const o={},r="SheetWithRoles",c={},d=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Types",id:"types",level:2},{value:"Features",id:"features",level:2},{value:"1. Visual Role Selection",id:"1-visual-role-selection",level:3},{value:"2. Role Options",id:"2-role-options",level:3},{value:"3. Layout",id:"3-layout",level:3},{value:"Example Responses",id:"example-responses",level:2},{value:"Styling",id:"styling",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Notes",id:"notes",level:2},{value:"Example: With Custom Styling",id:"example-with-custom-styling",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"sheetwithroles",children:"SheetWithRoles"})}),"\n",(0,l.jsxs)(n.p,{children:["The ",(0,l.jsx)(n.code,{children:"SheetWithRoles"})," component is a React Native component that presents a role selection interface with two options: Admin and Employee. It provides a clean, visual way for users to select their role in the application."]}),"\n",(0,l.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'import React from "react";\nimport SheetWithRoles from "./SheetWithRoles";\n\nconst MyComponent = () => {\n  const handleRoleSelection = (role) => {\n    console.log("Selected role:", role);\n    // Handle role selection\n  };\n\n  return <SheetWithRoles onPressRole={handleRoleSelection} />;\n};\n'})}),"\n",(0,l.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"Prop Name"}),(0,l.jsx)(n.th,{children:"Type"}),(0,l.jsx)(n.th,{children:"Required"}),(0,l.jsx)(n.th,{children:"Description"})]})}),(0,l.jsx)(n.tbody,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"onPressRole"})}),(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"(role: RoleType) => void"})}),(0,l.jsx)(n.td,{children:"Yes"}),(0,l.jsx)(n.td,{children:"Callback function when a role is selected"})]})})]}),"\n",(0,l.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"interface RoleType {\n  id: number;\n  name: string;\n}\n\n// User type constants from enum\nenum USER_TYPE {\n  CAR_WASH_ADMIN = 1,\n  CAR_WASH_EMPLOYEE = 2,\n}\n"})}),"\n",(0,l.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,l.jsx)(n.h3,{id:"1-visual-role-selection",children:"1. Visual Role Selection"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Two distinct cards for different roles"}),"\n",(0,l.jsx)(n.li,{children:"Icons representing each role type"}),"\n",(0,l.jsx)(n.li,{children:"Clear visual hierarchy with titles and subtitles"}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"2-role-options",children:"2. Role Options"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Admin User (",(0,l.jsx)(n.code,{children:"CAR_WASH_ADMIN"}),")"]}),"\n",(0,l.jsxs)(n.li,{children:["Employee (",(0,l.jsx)(n.code,{children:"CAR_WASH_EMPLOYEE"}),")"]}),"\n"]}),"\n",(0,l.jsx)(n.h3,{id:"3-layout",children:"3. Layout"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Horizontal card layout"}),"\n",(0,l.jsx)(n.li,{children:"Responsive sizing using normalize"}),"\n",(0,l.jsx)(n.li,{children:"Custom styling for each role card"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"example-responses",children:"Example Responses"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'// When Admin is selected\n{\n  id: USER_TYPE.CAR_WASH_ADMIN,\n  name: "Admin User"\n}\n\n// When Employee is selected\n{\n  id: USER_TYPE.CAR_WASH_EMPLOYEE,\n  name: "Employee"\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"styling",children:"Styling"}),"\n",(0,l.jsx)(n.p,{children:"The component uses:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Custom fonts from ",(0,l.jsx)(n.code,{children:"@quivio/assets/fonts"})]}),"\n",(0,l.jsx)(n.li,{children:"Normalized dimensions for consistent sizing"}),"\n",(0,l.jsx)(n.li,{children:"Custom styles for cards and containers"}),"\n",(0,l.jsx)(n.li,{children:"Image assets for role icons"}),"\n"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:'// Example of card styling\nconst styles = {\n  card: {\n    // Card styling for role selection\n    padding: normalize(16),\n    alignItems: "center",\n    backgroundColor: colors.white,\n    borderRadius: normalize(8),\n  },\n  employeText: {\n    marginTop: normalize(12),\n    textAlign: "center",\n  },\n};\n'})}),"\n",(0,l.jsx)(n.h2,{id:"dependencies",children:"Dependencies"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"React Native"}),"\n",(0,l.jsx)(n.li,{children:"@quivio/utils"}),"\n",(0,l.jsx)(n.li,{children:"@quivio/assets"}),"\n",(0,l.jsx)(n.li,{children:"@quivio/primitives"}),"\n",(0,l.jsx)(n.li,{children:"@quivio/components"}),"\n",(0,l.jsx)(n.li,{children:"@quivio/localization"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Role Selection:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["Each role card triggers the ",(0,l.jsx)(n.code,{children:"onPressRole"})," callback with role information"]}),"\n",(0,l.jsx)(n.li,{children:"Role data includes both ID and display name"}),"\n",(0,l.jsx)(n.li,{children:"Uses enum values for consistent role identification"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Layout:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Cards are arranged horizontally with equal spacing"}),"\n",(0,l.jsx)(n.li,{children:"Each card contains an icon and label"}),"\n",(0,l.jsx)(n.li,{children:"Responsive sizing using normalize utility"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Typography:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Uses H1, H3, and H4 components for text hierarchy"}),"\n",(0,l.jsx)(n.li,{children:"Custom font family for headings"}),"\n",(0,l.jsx)(n.li,{children:"Localized strings for all text content"}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Accessibility:"}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsx)(n.li,{children:"Touch-friendly card sizes"}),"\n",(0,l.jsx)(n.li,{children:"Clear visual hierarchy"}),"\n",(0,l.jsx)(n.li,{children:"Distinct visual separation between options"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"example-with-custom-styling",children:"Example: With Custom Styling"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-typescript",children:"const MyRoleSelector = () => {\n  const handleRoleSelect = (role) => {\n    if (role.id === USER_TYPE.CAR_WASH_ADMIN) {\n      // Handle admin selection\n    } else {\n      // Handle employee selection\n    }\n  };\n\n  return (\n    <ViewWrapper style={customContainerStyle}>\n      <SheetWithRoles onPressRole={handleRoleSelect} />\n    </ViewWrapper>\n  );\n};\n"})}),"\n",(0,l.jsx)(n.p,{children:"The component is designed to be simple yet effective, providing a clear interface for role selection while maintaining consistency with the application's design system."})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var s=i(6540);const l={},t=s.createContext(l);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);