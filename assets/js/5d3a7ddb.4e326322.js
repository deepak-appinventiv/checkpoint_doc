"use strict";(self.webpackChunkcheckpoint_doc=self.webpackChunkcheckpoint_doc||[]).push([[4899],{1354:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>a,frontMatter:()=>c,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"realtime/components/customButton","title":"CustomButton","description":"The Button component is a dynamic and adaptable button designed for application. It includes features such as loading indicators, customizable styling, and comprehensive accessibility support, ensuring an enhanced user experience.","source":"@site/docs/realtime/components/customButton.mdx","sourceDirName":"realtime/components","slug":"/realtime/components/customButton","permalink":"/checkpoint_doc/realtime/components/customButton","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/realtime/components/customButton.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"realTimeSidebar","previous":{"title":"CustomInput","permalink":"/checkpoint_doc/realtime/components/baseInput"},"next":{"title":"BottomSheet","permalink":"/checkpoint_doc/realtime/components/customBottomSheet"}}');var d=t(4848),i=t(8453);const c={},r="CustomButton",l={},o=[{value:"Usage",id:"usage",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Props",id:"props",level:2},{value:"Features",id:"features",level:2},{value:"Default Props",id:"default-props",level:2},{value:"Styling",id:"styling",level:2},{value:"Example: Custom Styling",id:"example-custom-styling",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.header,{children:(0,d.jsx)(n.h1,{id:"custombutton",children:"CustomButton"})}),"\n",(0,d.jsxs)(n.p,{children:["The ",(0,d.jsx)(n.code,{children:"Button"})," component is a dynamic and adaptable button designed for application. It includes features such as loading indicators, customizable styling, and comprehensive accessibility support, ensuring an enhanced user experience."]}),"\n",(0,d.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,d.jsx)(n.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"import React from 'react';\nimport CustomButton from './CustomButton';\n\nconst MyComponent = () => {\n  const handlePress = () => {\n    console.log('Button Pressed');\n  };\n\n  return (\n    <CustomButton title=\"Click Me\" onPress={handlePress} isLoading={false} />\n  );\n};\n\nexport default MyComponent;\n"})}),"\n",(0,d.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Prop Name"}),(0,d.jsx)(n.th,{children:"Type"}),(0,d.jsx)(n.th,{children:"Default"}),(0,d.jsx)(n.th,{children:"Description"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"title"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"''"})}),(0,d.jsx)(n.td,{children:"Text displayed on the button."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"disabled"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsxs)(n.td,{children:["Disables the button when ",(0,d.jsx)(n.code,{children:"true"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"children"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ReactNode"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"Child elements to render inside the button."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"testID"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"''"})}),(0,d.jsx)(n.td,{children:"Test ID for the button (useful for testing purposes)."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"onPress"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"function"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"() => {}"})}),(0,d.jsx)(n.td,{children:"Callback function triggered when the button is pressed."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"activeOpacity"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"number"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"0.7"})}),(0,d.jsx)(n.td,{children:"Opacity level for button press feedback."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"isLoading"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"false"})}),(0,d.jsxs)(n.td,{children:["Shows a loading spinner when ",(0,d.jsx)(n.code,{children:"true"}),"."]})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"spinnerColor"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"string"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"colors.white"})}),(0,d.jsx)(n.td,{children:"Color of the loading spinner."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"customStyle"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ViewStyle"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"Custom style for the button container."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"height"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"ViewStyle"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"normalize(56)"})}),(0,d.jsx)(n.td,{children:"Custom height for the button."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"customButtonTitleStyle"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"TextStyle"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"undefined"})}),(0,d.jsx)(n.td,{children:"Custom style for the button title."})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"isShadowRequired"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"boolean"})}),(0,d.jsx)(n.td,{children:(0,d.jsx)(n.code,{children:"true"})}),(0,d.jsxs)(n.td,{children:["Adds shadow styling when ",(0,d.jsx)(n.code,{children:"true"}),"."]})]})]})]}),"\n",(0,d.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Loading State:"})," Displays a spinner when the ",(0,d.jsx)(n.code,{children:"isLoading"})," prop is ",(0,d.jsx)(n.code,{children:"true"}),"."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Accessibility:"})," Includes ",(0,d.jsx)(n.code,{children:"accessibilityRole"})," and ",(0,d.jsx)(n.code,{children:"accessibilityLabel"})," for better screen reader support."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Customizable Styles:"})," Allows overriding of default styles with ",(0,d.jsx)(n.code,{children:"customStyle"})," and ",(0,d.jsx)(n.code,{children:"customButtonTitleStyle"})," props."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Shadow Support:"})," Adds shadow styling if ",(0,d.jsx)(n.code,{children:"isShadowRequired"})," is ",(0,d.jsx)(n.code,{children:"true"}),"."]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"default-props",children:"Default Props"}),"\n",(0,d.jsx)(n.p,{children:"The following default props are provided:"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"CustomButton.defaultProps = {\n  isLoading: false,\n  title: '',\n  testID: '',\n  disabled: false,\n  onPress: () => {},\n  activeOpacity: 0.7,\n  textTestId: 'button',\n  height: normalize(56),\n  textColor: colors.white,\n  fontSize: normalize(15),\n  medium: 'medium',\n};\n"})}),"\n",(0,d.jsx)(n.h2,{id:"styling",children:"Styling"}),"\n",(0,d.jsxs)(n.p,{children:["The component leverages predefined styles in the ",(0,d.jsx)(n.code,{children:"styles"})," file and ",(0,d.jsx)(n.code,{children:"commonStyles.shadow"}),". You can customize these using the ",(0,d.jsx)(n.code,{children:"customStyle"})," and ",(0,d.jsx)(n.code,{children:"customButtonTitleStyle"})," props."]}),"\n",(0,d.jsx)(n.h3,{id:"example-custom-styling",children:"Example: Custom Styling"}),"\n",(0,d.jsx)(n.pre,{children:(0,d.jsx)(n.code,{className:"language-javascript",children:"<CustomButton\n  title=\"Styled Button\"\n  customStyle={{ backgroundColor: 'blue', borderRadius: 10 }}\n  customButtonTitleStyle={{ fontSize: 18, color: 'yellow' }}\n  onPress={() => console.log('Custom Styled Button Pressed')}\n/>\n"})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>r});var s=t(6540);const d={},i=s.createContext(d);function c(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:c(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);