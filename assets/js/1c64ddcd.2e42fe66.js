"use strict";(self.webpackChunkcheckpoint_doc=self.webpackChunkcheckpoint_doc||[]).push([[6176],{3322:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>a,frontMatter:()=>i,metadata:()=>d,toc:()=>l});const d=JSON.parse('{"id":"quivio/components/inputs/customTouchableInput","title":"CustomTouchableInput","description":"Description","source":"@site/docs/quivio/components/inputs/customTouchableInput.md","sourceDirName":"quivio/components/inputs","slug":"/quivio/components/inputs/customTouchableInput","permalink":"/checkpoint_doc/quivio/components/inputs/customTouchableInput","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quivio/components/inputs/customTouchableInput.md","tags":[],"version":"current","frontMatter":{},"sidebar":"quivioSidebar","previous":{"title":"CustomInput","permalink":"/checkpoint_doc/quivio/components/inputs/customInput"},"next":{"title":"ListContentCard","permalink":"/checkpoint_doc/quivio/components/listContentCard"}}');var t=r(4848),s=r(8453);const i={},c="CustomTouchableInput",o={},l=[{value:"Description",id:"description",level:2},{value:"Usage",id:"usage",level:2},{value:"Import Component",id:"import-component",level:3},{value:"Props",id:"props",level:3},{value:"Example",id:"example",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Animated Placeholder",id:"animated-placeholder",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Support for Prefix and Country Code",id:"support-for-prefix-and-country-code",level:3},{value:"Customizable Styles",id:"customizable-styles",level:3},{value:"Helper Functions",id:"helper-functions",level:2},{value:"<code>getPaddingValue</code>",id:"getpaddingvalue",level:3},{value:"<code>getLabelLeftPosition</code>",id:"getlabelleftposition",level:3},{value:"<code>renderProductList</code>",id:"renderproductlist",level:3},{value:"<code>renderError</code>",id:"rendererror",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"customtouchableinput",children:"CustomTouchableInput"})}),"\n",(0,t.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"CustomTouchableInput"})," is a React Native component that provides a custom touchable input field with various features such as animations, error handling, and dynamic styling. This component supports prefixes, icons, and interactive labels, making it suitable for modern UI requirements."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h3,{id:"import-component",children:"Import Component"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'import CustomTouchableInput from "path-to-your-component";\n'})}),"\n",(0,t.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Prop"}),(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Default Value"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"label"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Label text displayed above the input."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"value"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Value of the input field."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onBlur"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"function"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Callback triggered when the input loses focus."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onFocus"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"function"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Callback triggered when the input gains focus."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"maxLength"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"number"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"40"})}),(0,t.jsx)(n.td,{children:"Maximum number of characters allowed in the input."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"textInputStyle"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsxs)(n.td,{children:["Custom styles for the ",(0,t.jsx)(n.code,{children:"TextInput"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onChangeText"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"function"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"() => {}"})}),(0,t.jsx)(n.td,{children:"Callback triggered when the input value changes."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"testID"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"${label}-text-input"})}),(0,t.jsx)(n.td,{children:"Identifier for testing purposes."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"onButtonPress"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"function"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"() => {}"})}),(0,t.jsx)(n.td,{children:"Callback triggered when the associated button is pressed."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"error"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Error message displayed below the input."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"secureTextEntry"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Hides the input text for sensitive fields like passwords."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"prefix"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Prefix text displayed before the input value."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"disabled"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"boolean"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"false"})}),(0,t.jsx)(n.td,{children:"Disables user interaction with the input."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"countryCode"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"string"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Displays a country code before the input field."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"customRightIconStyle"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Custom styles for the right-side button icon."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"errorIconStyle"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"styles.errorIconStyleDimension"})}),(0,t.jsx)(n.td,{children:"Styles for the error icon."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"products"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"array"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"List of products to be rendered below the input."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"icon"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Icon to display on the left side of the input field."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"buttonIcon"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"object"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"undefined"})}),(0,t.jsx)(n.td,{children:"Icon for the right-side button."})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:'<CustomTouchableInput\n  label="Username"\n  value=""\n  onChangeText={(text) => console.log(text)}\n  onButtonPress={() => console.log("Button pressed")}\n  error="Invalid username"\n  prefix="@"\n  icon={Icons.userIcon}\n  buttonIcon={Icons.clearIcon}\n  countryCode="+1"\n  maxLength={30}\n  textInputStyle={{ color: "blue" }}\n/>\n'})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,t.jsx)(n.h3,{id:"animated-placeholder",children:"Animated Placeholder"}),"\n",(0,t.jsx)(n.p,{children:"The placeholder text animates to adjust its position and size when the input gains or loses focus."}),"\n",(0,t.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.p,{children:"If an error message is provided, it displays an error icon and a message below the input field."}),"\n",(0,t.jsx)(n.h3,{id:"support-for-prefix-and-country-code",children:"Support for Prefix and Country Code"}),"\n",(0,t.jsx)(n.p,{children:"You can prepend a prefix or a country code to the input field."}),"\n",(0,t.jsx)(n.h3,{id:"customizable-styles",children:"Customizable Styles"}),"\n",(0,t.jsx)(n.p,{children:"You can provide custom styles for the input, icons, and error message."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"helper-functions",children:"Helper Functions"}),"\n",(0,t.jsx)(n.h3,{id:"getpaddingvalue",children:(0,t.jsx)(n.code,{children:"getPaddingValue"})}),"\n",(0,t.jsx)(n.p,{children:"Determines the horizontal padding of the input field based on the presence of a prefix or device type."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const getPaddingValue = (prefix) => {\n  if (prefix) return vw(6);\n  if (isTablet()) return vw(5);\n  return vw(20);\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"getlabelleftposition",children:(0,t.jsx)(n.code,{children:"getLabelLeftPosition"})}),"\n",(0,t.jsx)(n.p,{children:"Calculates the left position of the animated label based on the presence of an icon or country code."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const getLabelLeftPosition = (icon, countryCode) => {\n  if (icon || countryCode) {\n    return isTablet() ? vh(60) : vh(52);\n  }\n  return vh(20);\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"renderproductlist",children:(0,t.jsx)(n.code,{children:"renderProductList"})}),"\n",(0,t.jsxs)(n.p,{children:["Renders a list of products below the input field if the ",(0,t.jsx)(n.code,{children:"products"})," prop is provided."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const renderProductList = (products) => {\n  if (products?.length > 0) {\n    return (\n      <ViewWrapper customStyle={styles.productContainer}>\n        {products?.map((_item) => (\n          <ViewWrapper\n            customStyle={styles.itemContainer}\n            key={_item?.product_id}\n          >\n            <ViewWrapper customStyle={styles.dotView} />\n            <H6 style={{ marginLeft: normalize(8) }}>{_item?.product_name}</H6>\n          </ViewWrapper>\n        ))}\n      </ViewWrapper>\n    );\n  }\n  return null;\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"rendererror",children:(0,t.jsx)(n.code,{children:"renderError"})}),"\n",(0,t.jsx)(n.p,{children:"Displays the error icon and message if an error is present."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-javascript",children:"const renderError = (errorIconStyle, error) => {\n  return (\n    <ViewWrapper customStyle={styles.imgStyle}>\n      <ImageWrapper source={Icons.errorIcon} style={errorIconStyle} />\n      <H5 style={styles.errorText}>{error}</H5>\n    </ViewWrapper>\n  );\n};\n"})})]})}function a(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var d=r(6540);const t={},s=d.createContext(t);function i(e){const n=d.useContext(s);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),d.createElement(s.Provider,{value:n},e.children)}}}]);