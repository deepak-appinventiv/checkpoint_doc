"use strict";(self.webpackChunkcheckpoint_doc=self.webpackChunkcheckpoint_doc||[]).push([[8099],{322:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"quivio/components/listContentCard","title":"ListContentCard","description":"The ListContentCard component is used to display individual items (e.g., employees) in a list with various attributes, clickable behavior, and additional interactive elements.","source":"@site/docs/quivio/components/listContentCard.md","sourceDirName":"quivio/components","slug":"/quivio/components/listContentCard","permalink":"/checkpoint_doc/quivio/components/listContentCard","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/quivio/components/listContentCard.md","tags":[],"version":"current","frontMatter":{},"sidebar":"quivioSidebar","previous":{"title":"CustomTouchableInput","permalink":"/checkpoint_doc/quivio/components/inputs/customTouchableInput"},"next":{"title":"CustomModalWrapper","permalink":"/checkpoint_doc/quivio/components/modals/customModalWrapper"}}');var i=t(4848),l=t(8453);const r={},d="ListContentCard",o={},a=[{value:"Usage",id:"usage",level:2},{value:"Basic Example",id:"basic-example",level:3},{value:"Props",id:"props",level:2},{value:"Features",id:"features",level:2},{value:"Default Behavior",id:"default-behavior",level:2},{value:"Example: Custom Item Data",id:"example-custom-item-data",level:2},{value:"Styling",id:"styling",level:2},{value:"Analytics Integration",id:"analytics-integration",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"listcontentcard",children:"ListContentCard"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ListContentCard"})," component is used to display individual items (e.g., employees) in a list with various attributes, clickable behavior, and additional interactive elements."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h3,{id:"basic-example",children:"Basic Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'import React from "react";\nimport ListContentCard from "./ListContentCard";\n\nconst MyComponent = () => {\n  const handleCardPress = (item) => {\n    console.log("Card Pressed", item);\n  };\n\n  const mockItem = {\n    id: 1,\n    first_name: "John",\n    last_name: "Doe",\n    status: 1,\n    user_type: "Employee",\n    employee_departments: [\n      { department_id: { name: "Engineering" } },\n      { department_id: { name: "Marketing" } },\n    ],\n  };\n\n  return (\n    <ListContentCard\n      item={mockItem}\n      onPressCard={handleCardPress}\n      testID="employee-card"\n    />\n  );\n};\n\nexport default MyComponent;\n'})}),"\n",(0,i.jsx)(n.h2,{id:"props",children:"Props"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Prop Name"}),(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Default"}),(0,i.jsx)(n.th,{children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"item"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"object"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Required"})}),(0,i.jsx)(n.td,{children:"Data object containing the details for the card."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"onPressCard"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"function"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"() => {}"})}),(0,i.jsx)(n.td,{children:"Callback function triggered on long press of the card."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"testID"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"string"})}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"undefined"})}),(0,i.jsx)(n.td,{children:"Test ID for the card (useful for testing purposes)."})]})]})]}),"\n",(0,i.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Dynamic Name Badge:"})," Displays a badge with the employee's initials and a random background color."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interactive Department View:"})," Conditionally displays department names with an option to expand/collapse additional departments."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Admin Badge:"}),' Shows an admin badge if the user type is not "Employee".']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Locked Status Indicator:"})," Displays a lock icon if the employee is in a locked state."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Analytics Integration:"})," Logs events for tracking user interactions."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Navigation Support:"})," Navigates to the employee detail screen on card press."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"default-behavior",children:"Default Behavior"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Name and Badge:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["A ",(0,i.jsx)(n.code,{children:"ProfileBadge"})," component is rendered with the initials of the employee's name and a random background color."]}),"\n",(0,i.jsx)(n.li,{children:"An indicator is displayed if the employee's status is active."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Departments:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Displays a list of departments associated with the employee."}),"\n",(0,i.jsx)(n.li,{children:'If there are more departments than can fit, a "+ more" link allows toggling visibility.'}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Locked State:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If the employee's ",(0,i.jsx)(n.code,{children:"status"})," equals ",(0,i.jsx)(n.code,{children:"5"}),", a lock icon is displayed instead of the profile badge."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Admin Badge:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["If the ",(0,i.jsx)(n.code,{children:"user_type"}),' is not "Employee" and the employee is not locked, an admin badge with the user type is displayed.']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"example-custom-item-data",children:"Example: Custom Item Data"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:'const customItem = {\n  id: 2,\n  first_name: "Jane",\n  last_name: "Smith",\n  status: 5, // Locked state\n  user_type: "Admin",\n  employee_departments: [{ department_id: { name: "HR" } }],\n};\n\n<ListContentCard\n  item={customItem}\n  onPressCard={(item) => console.log("Card pressed for:", item)}\n  testID="custom-card"\n/>;\n'})}),"\n",(0,i.jsx)(n.h2,{id:"styling",children:"Styling"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"ListContentCard"})," component relies on the ",(0,i.jsx)(n.code,{children:"styles"})," module for its layout and design. Key styles include:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"styles.itemContainer"}),":"]})," Defines the outer container for the card."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"styles.lockedView"}),":"]})," Styling for the lock icon view."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"styles.nameText"}),":"]})," Text style for the employee name."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"styles.departmentText"}),":"]})," Text style for department names."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"styles.moreText"}),":"]}),' Text style for the "+ more" link.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"styles.adminBadge"}),":"]})," Styling for the admin badge."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"analytics-integration",children:"Analytics Integration"}),"\n",(0,i.jsx)(n.p,{children:"The component logs an analytics event when the card is pressed. Event details include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"employee_name"}),": The full name of the employee."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"employee_type"}),": The type of user (e.g., Employee, Admin)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-javascript",children:"AnalyticsService.logEvent(EVENTS.EMPLOYEE_SEARCH_ITEM_CLICKED, {\n  employee_name: `${item?.first_name} ${item?.last_name}`,\n  employee_type: GET_USER_TYPE[item?.user_type],\n});\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var s=t(6540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);